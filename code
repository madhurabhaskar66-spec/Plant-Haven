<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PlantHaven - Your Urban Jungle Destination</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        body {
            box-sizing: border-box;
        }
        
        .hero-bg {
            background: linear-gradient(135deg, #064e3b 0%, #065f46 50%, #047857 100%);
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
            z-index: -1;
        }
        
        .hero-bg::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="botanical" x="0" y="0" width="30" height="30" patternUnits="userSpaceOnUse"><path d="M15 5 Q20 10 15 15 Q10 10 15 5" fill="%23ffffff" opacity="0.1"/><circle cx="8" cy="20" r="2" fill="%23ffffff" opacity="0.08"/><path d="M25 20 Q28 25 25 28 Q22 25 25 20" fill="%23ffffff" opacity="0.06"/></pattern></defs><rect width="100" height="100" fill="url(%23botanical)"/></svg>');
            opacity: 0.4;
        }
        
        .plant-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 1rem;
        }
        
        .image-placeholder {
            background: linear-gradient(135deg, #f0fdf4 0%, #dcfce7 100%);
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
            overflow: hidden;
        }
        
        .image-placeholder::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="leaves" x="0" y="0" width="20" height="20" patternUnits="userSpaceOnUse"><path d="M10 2 Q15 7 10 12 Q5 7 10 2" fill="%2316a34a" opacity="0.1"/></pattern></defs><rect width="100" height="100" fill="url(%23leaves)"/></svg>');
            opacity: 0.3;
        }
        
        .plant-card {
            transition: all 0.3s ease;
        }
        
        .plant-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 25px 30px -5px rgba(0, 0, 0, 0.15), 0 15px 15px -5px rgba(0, 0, 0, 0.08);
        }
        
        .cart-icon {
            position: relative;
        }
        
        .cart-badge {
            position: absolute;
            top: -8px;
            right: -8px;
            background: #dc2626;
            color: white;
            border-radius: 50%;
            width: 22px;
            height: 22px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 12px;
            font-weight: bold;
        }
        
        .fade-in {
            animation: fadeIn 0.6s ease-in;
        }
        
        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        @keyframes floatUp {
            0% {
                transform: translateY(0) scale(1);
                opacity: 1;
            }
            100% {
                transform: translateY(-100px) scale(0.5);
                opacity: 0;
            }
        }
        
        @keyframes pulse {
            0% {
                transform: scale(1);
            }
            50% {
                transform: scale(1.05);
            }
            100% {
                transform: scale(1);
            }
        }
        
        .animate-pulse {
            animation: pulse 0.3s ease-in-out;
        }
        
        .hover\:scale-102:hover {
            transform: scale(1.02);
        }
        
        .hover\:scale-105:hover {
            transform: scale(1.05);
        }
        
        .hover\:scale-110:hover {
            transform: scale(1.1);
        }
        
        .animate-bounce {
            animation: bounce 1s infinite;
        }
        
        @keyframes bounce {
            0%,
            20%,
            53%,
            80%,
            100% {
                transform: translate3d(0, 0, 0);
            }
            40%,
            43% {
                transform: translate3d(0, -5px, 0);
            }
            70% {
                transform: translate3d(0, -3px, 0);
            }
            90% {
                transform: translate3d(0, -1px, 0);
            }
        }
        
        .care-level-easy {
            background: #10b981;
        }
        
        .care-level-medium {
            background: #f59e0b;
        }
        
        .care-level-hard {
            background: #ef4444;
        }
        
        .plant-category {
            border-left: 4px solid #059669;
            padding-left: 1rem;
        }
        
        .content-overlay {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            position: relative;
            z-index: 1;
        }
    </style>
</head>

<body class="bg-gray-50 min-h-full">
    <!-- Full Screen Background -->
    <div class="hero-bg"></div>

    <!-- Header Component -->
    <header id="header" class="bg-white shadow-xl sticky top-0 z-50 hidden">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between items-center h-18">
                <div class="flex items-center">
                    <h1 class="text-3xl font-bold text-green-700">üåø PlantHaven</h1>
                </div>
                <nav class="flex items-center space-x-8">
                    <button onclick="Navigation.showPage('landing')" class="text-gray-700 hover:text-green-600 font-medium transition-colors duration-200">Home</button>
                    <button onclick="Navigation.showPage('products')" class="text-gray-700 hover:text-green-600 font-medium transition-colors duration-200">Shop Plants</button>
                    <button onclick="Navigation.showPage('cart')" class="cart-icon text-gray-700 hover:text-green-600 transition-colors duration-200">
                        <svg class="w-7 h-7" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-1.5 6M7 13l-1.5 6m0 0h9m-9 0V19a2 2 0 002 2h7a2 2 0 002-2v-4"></path>
                        </svg>
                        <span id="cart-count" class="cart-badge">0</span>
                    </button>
                </nav>
            </div>
        </div>
    </header>

    <!-- Landing Page Component -->
    <div id="landing-page" class="page">
        <div class="min-h-full flex items-center justify-center text-white relative z-10">
            <div class="text-center px-4 relative z-10 max-w-5xl">
                <h1 class="text-6xl md:text-8xl font-bold mb-8 tracking-tight">üåø PlantHaven</h1>
                <p class="text-xl md:text-2xl mb-10 max-w-4xl mx-auto leading-relaxed font-light">
                    Welcome to your urban jungle destination! At PlantHaven, we believe every space deserves the beauty and tranquility of nature. Our expertly curated collection features everything from beginner-friendly succulents to rare tropical specimens. Each plant
                    comes with detailed care instructions and our commitment to helping you create the perfect green sanctuary in your home.
                </p>
                <button onclick="Navigation.showPage('products')" class="bg-white text-green-700 px-10 py-5 rounded-full text-xl font-bold hover:bg-green-50 transform hover:scale-105 transition-all duration-300 shadow-2xl">
                    Start Your Plant Journey üå±
                </button>
            </div>
        </div>
    </div>

    <!-- Product Listing Component -->
    <div id="products-page" class="page hidden">
        <div class="content-overlay min-h-full">
            <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
                <div class="text-center mb-16">
                    <h2 class="text-5xl font-bold text-gray-900 mb-6">Plant Collection</h2>
                    <p class="text-2xl text-gray-600">Transform your space with our premium plants</p>
                </div>

                <!-- Indoor Air Purifiers Component -->
                <div class="mb-20">
                    <div class="plant-category mb-10">
                        <h3 class="text-3xl font-bold text-green-700 mb-4 flex items-center">
                            <span class="mr-4">üå¨Ô∏è</span> Indoor Air Purifiers
                        </h3>
                        <p class="text-gray-600 text-lg">Perfect plants that clean your air while adding natural beauty</p>
                    </div>
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-10" id="air-purifier-plants">
                        <!-- Plants will be rendered here by PlantComponent -->
                    </div>
                </div>

                <!-- Low Maintenance Component -->
                <div class="mb-20">
                    <div class="plant-category mb-10">
                        <h3 class="text-3xl font-bold text-green-700 mb-4 flex items-center">
                            <span class="mr-4">üåø</span> Low Maintenance Favorites
                        </h3>
                        <p class="text-gray-600 text-lg">Perfect for beginners or busy plant parents</p>
                    </div>
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-10" id="low-maintenance-plants">
                        <!-- Plants will be rendered here by PlantComponent -->
                    </div>
                </div>

                <!-- Statement Plants Component -->
                <div class="mb-20">
                    <div class="plant-category mb-10">
                        <h3 class="text-3xl font-bold text-green-700 mb-4 flex items-center">
                            <span class="mr-4">‚≠ê</span> Statement Plants
                        </h3>
                        <p class="text-gray-600 text-lg">Bold, beautiful plants that become the centerpiece of any room</p>
                    </div>
                    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-10" id="statement-plants">
                        <!-- Plants will be rendered here by PlantComponent -->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Shopping Cart Component -->
    <div id="cart-page" class="page hidden">
        <div class="content-overlay min-h-full">
            <div class="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
                <div class="text-center mb-16">
                    <h2 class="text-5xl font-bold text-gray-900 mb-6">Your Plant Cart</h2>
                    <p class="text-2xl text-gray-600">Review your green selections</p>
                </div>

                <div class="bg-white rounded-2xl shadow-2xl p-10">
                    <div id="cart-empty" class="text-center py-16">
                        <div class="text-8xl mb-6">üõí</div>
                        <h3 class="text-3xl font-bold text-gray-700 mb-6">Your cart is empty</h3>
                        <p class="text-gray-500 mb-10 text-lg">Start building your plant collection today!</p>
                        <button onclick="Navigation.showPage('products')" class="bg-green-600 text-white px-10 py-4 rounded-xl font-bold text-lg hover:bg-green-700 transition-colors duration-200">
                            Shop Plants
                        </button>
                    </div>

                    <div id="cart-content" class="hidden">
                        <div class="mb-10">
                            <div class="flex justify-between items-center mb-8">
                                <h3 class="text-2xl font-bold">Total Plants: <span id="total-items" class="text-green-600">0</span></h3>
                                <h3 class="text-3xl font-bold text-green-600">Total: $<span id="total-cost">0.00</span></h3>
                            </div>

                            <div id="cart-items" class="space-y-6">
                                <!-- Cart items will be rendered here by CartComponent -->
                            </div>
                        </div>

                        <div class="border-t-2 pt-10 flex flex-col sm:flex-row gap-6 justify-between">
                            <button onclick="Navigation.showPage('products')" class="bg-gray-600 text-white px-8 py-4 rounded-xl font-bold text-lg hover:bg-gray-700 transition-colors duration-200">
                                Continue Shopping
                            </button>
                            <button onclick="AppActions.checkout()" class="bg-green-600 text-white px-10 py-4 rounded-xl font-bold text-lg hover:bg-green-700 transition-colors duration-200">
                                Proceed to Checkout
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // React-like State Management
        const AppState = {
            data: {
                cart: {},
                currentPage: 'landing',
                plants: [
                    // Air Purifiers
                    {
                        id: 'snake-plant',
                        name: 'Snake Plant',
                        price: 32.99,
                        emoji: 'üêç',
                        category: 'air-purifier',
                        care: 'Easy',
                        water: 'Low',
                        light: 'Low',
                        imageUrl: 'https://www.mydomaine.com/thmb/lNxKuWZtIN2j6YOH-_wxLDvmyTs=/2230x2886/filters:no_upscale():max_bytes(150000):strip_icc()/the-sill_sansevieria-zeylanica-snake-plant_6_2230x.progressive-5e010d6edf454e3c913be21b19942306.jpg',
                        description: 'Perfect for beginners, this hardy plant thrives in low light and requires minimal watering.'
                    }, {
                        id: 'peace-lily',
                        name: 'Peace Lily',
                        price: 38.99,
                        emoji: 'üïäÔ∏è',
                        category: 'air-purifier',
                        care: 'Medium',
                        water: 'Regular',
                        light: 'Medium',
                        imageUrl: 'https://www.southernliving.com/thmb/JfBKWZO_PL2gqdu1-Acpp_PpVoE=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/GettyImages-1324612180-391958bda57c4683997ddf13dbec967a.jpg',
                        description: 'Elegant white blooms and excellent air purification make this a popular choice.'
                    },

                    // Low Maintenance
                    {
                        id: 'zz-plant',
                        name: 'ZZ Plant',
                        price: 45.99,
                        emoji: 'üíé',
                        category: 'low-maintenance',
                        care: 'Easy',
                        water: 'Very Low',
                        light: 'Any',
                        imageUrl: 'https://ispru.com/wp-content/uploads/2022/12/Zz-plant.jpg',
                        description: 'Nearly indestructible with glossy leaves that add modern elegance to any space.'
                    }, {
                        id: 'pothos',
                        name: 'Golden Pothos',
                        price: 28.99,
                        emoji: 'üçÉ',
                        category: 'low-maintenance',
                        care: 'Easy',
                        water: 'Low',
                        light: 'Low-Medium',
                        imageUrl: 'https://anythinggrowsalberta.com/wp-content/uploads/2020/06/IMG_3681.jpg',
                        description: 'Trailing vines with heart-shaped leaves perfect for hanging baskets or shelves.'
                    },

                    // Statement Plants
                    {
                        id: 'fiddle-leaf',
                        name: 'Fiddle Leaf Fig',
                        price: 89.99,
                        emoji: 'üéª',
                        category: 'statement',
                        care: 'Hard',
                        water: 'Regular',
                        light: 'Bright',
                        imageUrl: 'https://bloomscape.com/wp-content/uploads/2020/08/bloomscape_fiddle-leaf-fig_charcoal-e1652800894846.jpg?ver=279577',
                        description: 'Large, violin-shaped leaves create a dramatic focal point in any room.'
                    }, {
                        id: 'monstera',
                        name: 'Monstera Deliciosa',
                        price: 67.99,
                        emoji: 'üßÄ',
                        category: 'statement',
                        care: 'Medium',
                        water: 'Regular',
                        light: 'Bright Indirect',
                        imageUrl: 'https://drevesnica.si/wp-content/uploads/sites/1406/2024/12/20200309_110255-scaled-1.jpg',
                        description: 'Iconic split leaves and climbing nature make this a true conversation starter.'
                    }
                ]
            },

            // State update methods
            updateCart: function(newCart) {
                this.data.cart = {...newCart
                };
                this.render();
            },

            setCurrentPage: function(page) {
                this.data.currentPage = page;
                this.render();
            },

            // Render method (like React's render)
            render: function() {
                this.updateCartBadge();
                if (this.data.currentPage === 'cart') {
                    CartComponent.render(this.data.cart);
                } else if (this.data.currentPage === 'products') {
                    PlantComponent.renderAll(this.data.plants);
                }
            },

            updateCartBadge: function() {
                const totalItems = Object.values(this.data.cart).reduce((sum, item) => sum + item.quantity, 0);
                const badge = document.getElementById('cart-count');
                if (badge) {
                    badge.textContent = totalItems;
                    badge.classList.add('animate-pulse');
                    setTimeout(() => badge.classList.remove('animate-pulse'), 300);
                }
            }
        };

        // Plant Component (React-like component)
        const PlantComponent = {
                renderAll: function(plants) {
                    const categories = {
                        'air-purifier': document.getElementById('air-purifier-plants'),
                        'low-maintenance': document.getElementById('low-maintenance-plants'),
                        'statement': document.getElementById('statement-plants')
                    };

                    // Clear existing content
                    Object.values(categories).forEach(container => {
                        if (container) container.innerHTML = '';
                    });

                    // Render plants by category
                    plants.forEach(plant => {
                        const container = categories[plant.category];
                        if (container) {
                            container.innerHTML += this.renderPlant(plant);
                        }
                    });
                },

                renderPlant: function(plant) {
                        const isInCart = AppState.data.cart[plant.id];
                        const buttonClass = isInCart ? 'bg-gray-400 cursor-not-allowed' : 'bg-green-600 hover:bg-green-700 hover:scale-105';
                        const buttonText = isInCart ? 'Added to Cart ‚úì' : 'Add to Cart';
                        const buttonDisabled = isInCart ? 'disabled' : '';

                        return `
                    <div class="plant-card bg-white rounded-2xl shadow-xl overflow-hidden">
                        <div class="h-72 image-placeholder relative">
                            ${plant.imageUrl ? 
                                `<img src="${plant.imageUrl}" alt="${plant.name}" class="plant-image" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">
                                 <div class="text-8xl animate-bounce absolute inset-0 flex items-center justify-center" style="display: none;">${plant.emoji}</div>` :
                                `<div class="text-8xl animate-bounce relative z-10">${plant.emoji}</div>`
                            }
                            <div class="absolute top-4 right-4 bg-white bg-opacity-90 rounded-full p-2 shadow-lg">
                                <span class="text-2xl">${plant.emoji}</span>
                            </div>
                        </div>
                        <div class="p-8">
                            <div class="flex justify-between items-start mb-3">
                                <h4 class="text-2xl font-bold">${plant.name}</h4>
                                <span class="care-level-${plant.care.toLowerCase()} text-white text-sm px-3 py-1 rounded-full font-semibold">${plant.care} Care</span>
                            </div>
                            <p class="text-gray-600 mb-3">üè† Indoor | üíß ${plant.water} Water | ‚òÄÔ∏è ${plant.light} Light</p>
                            <p class="text-gray-500 text-sm mb-4">${plant.description}</p>
                            <p class="text-3xl font-bold text-green-600 mb-6">$${plant.price.toFixed(2)}</p>
                            <button onclick="AppActions.addToCart('${plant.id}')" 
                                    class="add-to-cart-btn w-full ${buttonClass} text-white py-4 rounded-xl font-bold text-lg transition-all duration-200" ${buttonDisabled}>
                                ${buttonText}
                            </button>
                        </div>
                    </div>
                `;
            }
        };

        // Cart Component (React-like component)
        const CartComponent = {
            render: function(cart) {
                const cartEmpty = document.getElementById('cart-empty');
                const cartContent = document.getElementById('cart-content');
                const cartItems = document.getElementById('cart-items');
                
                const totalItems = Object.values(cart).reduce((sum, item) => sum + item.quantity, 0);
                
                if (totalItems === 0) {
                    cartEmpty.classList.remove('hidden');
                    cartContent.classList.add('hidden');
                    return;
                }
                
                cartEmpty.classList.add('hidden');
                cartContent.classList.remove('hidden');
                
                // Update totals
                const totalCost = Object.values(cart).reduce((sum, item) => sum + (item.price * item.quantity), 0);
                document.getElementById('total-items').textContent = totalItems;
                document.getElementById('total-cost').textContent = totalCost.toFixed(2);
                
                // Render cart items
                cartItems.innerHTML = Object.entries(cart).map(([id, item]) => this.renderCartItem(id, item)).join('');
            },
            
            renderCartItem: function(id, item) {
                return `
                    <div class="flex items-center justify-between p-6 border-2 rounded-xl bg-gray-50 hover:bg-gray-100 transition-all duration-200 hover:scale-102">
                        <div class="flex items-center space-x-6">
                            <div class="text-5xl animate-bounce">${item.emoji}</div>
                            <div>
                                <h4 class="font-bold text-xl text-gray-800">${item.name}</h4>
                                <p class="text-gray-600 text-lg">$${item.price.toFixed(2)} each</p>
                                <p class="text-sm text-green-600 font-semibold">Subtotal: $${(item.price * item.quantity).toFixed(2)}</p>
                            </div>
                        </div>
                        <div class="flex items-center space-x-6">
                            <div class="flex items-center space-x-3 bg-white rounded-lg p-2 shadow-sm">
                                <button onclick="AppActions.decreaseQuantity('${id}')" class="bg-red-500 text-white w-10 h-10 rounded-full hover:bg-red-600 transition-all duration-200 font-bold text-lg hover:scale-110">-</button>
                                <span class="font-bold text-xl w-10 text-center text-green-600">${item.quantity}</span>
                                <button onclick="AppActions.increaseQuantity('${id}')" class="bg-green-500 text-white w-10 h-10 rounded-full hover:bg-green-600 transition-all duration-200 font-bold text-lg hover:scale-110">+</button>
                            </div>
                            <button onclick="AppActions.removeFromCart('${id}')" class="bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600 transition-all duration-200 font-semibold hover:scale-105">Remove</button>
                        </div>
                    </div>
                `;
            }
        };

        // Navigation Component (React-like router)
        const Navigation = {
            showPage: function(page) {
                // Hide all pages with fade effect
                document.querySelectorAll('.page').forEach(p => {
                    p.classList.add('hidden');
                    p.classList.remove('fade-in');
                });
                
                // Show selected page with animation
                const targetPage = document.getElementById(page + '-page');
                targetPage.classList.remove('hidden');
                targetPage.classList.add('fade-in');
                
                // Show/hide header based on page
                const header = document.getElementById('header');
                if (page === 'landing') {
                    header.classList.add('hidden');
                } else {
                    header.classList.remove('hidden');
                }
                
                // Update state and render
                AppState.setCurrentPage(page);
                
                // Update cart page title dynamically
                if (page === 'cart') {
                    const totalItems = Object.values(AppState.data.cart).reduce((sum, item) => sum + item.quantity, 0);
                    const cartTitle = document.querySelector('#cart-page h2');
                    if (cartTitle && totalItems > 0) {
                        cartTitle.textContent = `Your Plant Cart (${totalItems} items)`;
                    }
                }
            }
        };

        // App Actions (React-like action handlers)
        const AppActions = {
            addToCart: function(plantId) {
                const plant = AppState.data.plants.find(p => p.id === plantId);
                if (!plant) return;
                
                const newCart = { ...AppState.data.cart };
                
                if (newCart[plantId]) {
                    newCart[plantId].quantity += 1;
                } else {
                    newCart[plantId] = {
                        name: plant.name,
                        price: plant.price,
                        emoji: plant.emoji,
                        quantity: 1,
                        addedAt: new Date().toISOString()
                    };
                }
                
                // Show success animation
                this.showAddAnimation(event.target);
                
                AppState.updateCart(newCart);
            },
            
            increaseQuantity: function(id) {
                const newCart = { ...AppState.data.cart };
                newCart[id].quantity += 1;
                AppState.updateCart(newCart);
            },
            
            decreaseQuantity: function(id) {
                const newCart = { ...AppState.data.cart };
                
                if (newCart[id].quantity > 1) {
                    newCart[id].quantity -= 1;
                } else {
                    delete newCart[id];
                }
                
                AppState.updateCart(newCart);
            },
            
            removeFromCart: function(id) {
                const newCart = { ...AppState.data.cart };
                delete newCart[id];
                AppState.updateCart(newCart);
            },
            
            checkout: function() {
                Utils.showModal(
                    'Coming Soon!', 
                    'Our secure checkout system is currently being developed. Your plants will be ready for purchase very soon!',
                    'üöß'
                );
            },
            
            showAddAnimation: function(button) {
                const rect = button.getBoundingClientRect();
                const plant = document.createElement('div');
                plant.textContent = 'üå±';
                plant.style.cssText = `
                    position: fixed;
                    left: ${rect.left + rect.width/2}px;
                    top: ${rect.top}px;
                    font-size: 2rem;
                    pointer-events: none;
                    z-index: 1000;
                    animation: floatUp 1s ease-out forwards;
                `;
                
                document.body.appendChild(plant);
                setTimeout(() => plant.remove(), 1000);
            }
        };

        // Utility Component
        const Utils = {
            showModal: function(title, message, emoji = 'üåø') {
                const modal = document.createElement('div');
                modal.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50';
                modal.innerHTML = `
                    <div class="bg-white p-10 rounded-2xl max-w-lg mx-4 text-center transform animate-pulse">
                        <div class="text-8xl mb-6">${emoji}</div>
                        <h3 class="text-3xl font-bold mb-6">${title}</h3>
                        <p class="text-gray-600 mb-8 text-lg">${message}</p>
                        <button onclick="this.parentElement.parentElement.remove()" class="bg-green-600 text-white px-8 py-3 rounded-xl hover:bg-green-700 transition-colors duration-200 font-bold">
                            Got It!
                        </button>
                    </div>
                `;
                document.body.appendChild(modal);
                
                // Auto-close after 5 seconds
                setTimeout(() => {
                    if (modal.parentNode) modal.remove();
                }, 5000);
            }
        };

        // App Initialization (React-like componentDidMount)
        function initApp() {
            Navigation.showPage('landing');
            console.log('üåø PlantHaven App initialized with React-like architecture!');
        }

        // Initialize when DOM is loaded
        document.addEventListener('DOMContentLoaded', initApp);
        
        // Fallback initialization
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', initApp);
        } else {
            initApp();
        }
    </script>
    <script>
        (function() {
            function c() {
                var b = a.contentDocument || a.contentWindow.document;
                if (b) {
                    var d = b.createElement('script');
                    d.innerHTML = "window.__CF$cv$params={r:'99305e5586af8577',t:'MTc2MTIxMzQyOC4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";
                    b.getElementsByTagName('head')[0].appendChild(d)
                }
            }
            if (document.body) {
                var a = document.createElement('iframe');
                a.height = 1;
                a.width = 1;
                a.style.position = 'absolute';
                a.style.top = 0;
                a.style.left = 0;
                a.style.border = 'none';
                a.style.visibility = 'hidden';
                document.body.appendChild(a);
                if ('loading' !== document.readyState) c();
                else if (window.addEventListener) document.addEventListener('DOMContentLoaded', c);
                else {
                    var e = document.onreadystatechange || function() {};
                    document.onreadystatechange = function(b) {
                        e(b);
                        'loading' !== document.readyState && (document.onreadystatechange = e, c())
                    }
                }
            }
        })();
    </script>
</body>

</html>
